{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
	  "defaultValue": "adminuser",
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "securestring",
	  "defaultValue": "password123!",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "dnsLabelPrefix": {
      "type": "string",
	  "defaultValue": "[concat('weblb',uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
      }
    },
	"VmCount": {
      "defaultValue": 3,
      "type": "int",
      "metadata": {
        "description": "Number of Web servers to be deployed"
      }
    },
    
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    }
  },
  "variables": {
    "storageAccountName": "[concat(uniquestring(resourceGroup().id), 'sawinvm')]",
    "nicName": "myVMNic",
    "loadBalancerName": "myLB",
    "lbIPAddressName": "lbIP",
    "addressPrefix": "10.0.0.0/16",
    "subnetName": "Subnet",
    "subnetPrefix": "10.0.0.0/24",
    "publicIPAddressName": "myPublicIP",
    "vmName": "myVM",
    "availSetName": "avail-set-",
    "networkSecurityGroupName": "mySG",
    "virtualNetworkName": "MyVNET",
    "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]"
  },
  "resources": [
    

{
  "name": "linkedTemplate",
  "type": "Microsoft.Resources/deployments",
  "apiVersion": "2018-05-01",
  "properties": {
      "mode": "Incremental",
      "templateLink": {
          "uri":"https://devopslinkedtemplates.blob.core.windows.net/linkedarm/linkedStorageAccount.json"
      },
      "parameters": {
          "storageAccountName":{"value": "[variables('storageAccountName')]"},
          "location":{"value": "[parameters('location')]"}
      }
  }
},


{
 "name": "linkedTemplate1",
	"type": "Microsoft.Resources/deployments",
	"apiVersion": "2018-05-01",
	"properties": {
	"mode": "Incremental",
       "templateLink": {
		"uri": "https://devopslinkedtemplates.blob.core.windows.net/linkedarm/linkedSecurityGroup.json"
        	},
	"parameters": {
	           "networkSecurityGroupName": {
		   "value": "[variables('networkSecurityGroupName')]"
		   },
		  "location": {
			"value": "[parameters('location')]"
			},

                  "addressPrefix": {
		         "value": "[variables('addressPrefix')]"
			},
		   "subnetPrefix": {
		  	  "value": "[variables('subnetPrefix')]"
			}


		    }
		}
},

{
        "name": "linkedTemplate3",
	"type": "Microsoft.Resources/deployments",
	"apiVersion": "2018-05-01",
	"properties": {
		"mode": "Incremental",
		"templateLink": {
			"uri": "https://devopslinkedtemplates.blob.core.windows.net/linkedarm/linkedloadbalancer2.json"
		},
		"parameters": {
			"loadBalancerName": {
				"value": "[variables('loadBalancerName')]"
			},
			"location": {
				"value": "[parameters('location')]"
			},
			"lbIPAddressName": {
				"value": "[variables('lbIPAddressName')]"
			}


		}
	}
},

{
         "name": "linkedTemplate2",
         "type": "Microsoft.Resources/deployments",
         "apiVersion": "2018-05-01",
         "properties": {
                "mode": "Incremental",
                        "templateLink": {
                                 "uri": "https://devopslinkedtemplates.blob.core.windows.net/linkedarm/linkedcosmosdb.json"
                                },
                                "parameters": {
            "databaseAccountName": {
            "value": "mydatabase1"
            },
            "consistencyLevel": {
            "value": "BoundedStaleness"
           },
           "maxStalenessPrefix": {
           "value": 100
          },
          "maxIntervalInSeconds": {
           "value": 5
            }
            }
                  }
},





    {
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[parameters('location')]",
      "apiVersion": "2018-10-01",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]",
              "networkSecurityGroup": {
		"id": "[reference('linkedTemplate1').outputs.securityGroupid.value]"
	       }

            }
          }
        ]
      }
    },

{
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[concat(variables('availSetName'), copyindex(1))]",
      "apiVersion": "2017-12-01",
      "location": "[parameters('location')]",
      "comments": "These are the Availability Sets for VMs",
      
      "copy": {
        "name": "availSetLoop",
        "count": 3
      },
      "sku": {
        "name": "Aligned"
          },
        "properties": { 
            "platformFaultDomainCount": 2,
            "platformUpdateDomainCount": 5
        }
 },




    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('nicName'), copyindex(1))]",
      "location": "[parameters('location')]",
      "apiVersion": "2018-10-01",
      "dependsOn": [
        "linkedTemplate",
        "linkedTemplate3",
        "[resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
        
      ],
      "copy": {
        "name": "NicLoop",
        "count": "[parameters('VmCount')]"
       },
      "properties": {
        "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
 
                     "loadBalancerBackendAddressPools": [
                      {
                        "id": "[reference('linkedTemplate3').outputs.loadBalancerBackendAddressPools.value]"
                      }
                    ]
                   }
                  }
                ] 

      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('vmName'), copyindex(1))]",
      "location": "[parameters('location')]",
      "apiVersion": "2018-10-01",
      "dependsOn": [
        "linkedTemplate",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), copyindex(1))]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('availSetName'),'1')]"
      ],
	  "copy": {
        "name": "VMLoop",
        "count": "[parameters('VmCount')]"
      },
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',concat(variables('availSetName'),'1'))]"
        },

        "hardwareProfile": {
          "vmSize": "Standard_B1s"
        },
        "osProfile": {
          "computerName": "[concat('myVM',copyindex(1))]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "RedHat",
            "offer": "RHEL",
            "sku": "7.3",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "diskSizeGB": 20,
              "lun": 0,
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicName'), copyindex(1)))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[reference('linkedTemplate').outputs.storageUri.value]"
          }
        }
      }
    }
  ]
  
}

